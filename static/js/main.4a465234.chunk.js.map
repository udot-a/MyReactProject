{"version":3,"sources":["api/api.js","components/Header/Header.module.css","assets/images/user.jpg","redux/dialogs-reducer.js","components/News/News.module.css","components/Users/users.module.css","assets/images/Pacman-1s-200px.svg","components/Navbar/Navbar.module.css","components/common/FormControls/FormsControls.js","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","login/login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/Preloader/Preloader.js","utils/object-helpers.js","components/common/FormControls/FormsContols.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","logout","module","exports","initialState","dialogsData","id","name","picture","messagesData","message","dialogsReducer","state","action","type","body","newMessageBody","length","sendMessageCreator","FormControl","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","Textarea","restProps","Input","createField","placeholder","validators","component","text","validate","Boolean","window","location","hostname","match","Navbar","s","nav","item","active","to","activeClassName","activeLink","News","size","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","filter","p","map","cn","selectedPage","pageNumber","key","e","User","user","userPhoto","src","photos","small","alt","followed","disabled","some","Users","u","getUsersSimple","usersPage","getPageSize","createSelector","getTotalUserCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPIComponent","this","Preloader","React","Component","compose","connect","bind","page","items","totalCount","Header","header","loginBlock","isAuth","setAuthUserData","payload","getAuthUserData","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","style","formSummaryError","messages","stopSubmit","_error","initialized","reducers","combineReducers","profilePage","profileReducer","messagePage","sidebar","updateObjectInArray","formReducer","init","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","subscribe","log","getState","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","UsersContainer","AppContainer","withRouter","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","preloader","itemId","objPropName","newObjProps","parseStr","str","flag","result","toLowerCase","value","undefined","maxLengthCreator","maxLength","minLengthCreator","minLength","postData","likesCounter","newPostText","postId","addPostActionCreator","setStatus","getUserProfile","file","errorField","Promise","reject"],"mappings":"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","file":"static/js/main.4a465234.chunk.js","sourcesContent":["import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    headers: {\n        \"API-KEY\": \"15c6ed1d-eb09-4e34-b317-716c6eb705bc\"\n    }\n})\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance\n            .get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\n    },\n    follow(userId) {\n        return    instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId){\n        console.warn('Obsolete method. Please use profileApi method.')\n        return profileAPI.getProfile(userId)\n    }\n\n}\nexport const profileAPI = {\n    getProfile(userId){\n        return instance.get(`profile/`+userId);\n    },\n    getStatus(userId){\n        return instance.get(`profile/status/`+userId);\n    },\n    updateStatus(status){\n        return instance.put(`profile/status`, {status});\n    },\n    savePhoto(photoFile) {\n        const formData = new FormData();\n        formData.append(\"image\", photoFile);\n\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n    },\n    saveProfile(profile) {\n        return instance.put(`profile`, profile );\n    }\n\n}\nexport const authAPI = {\n    me: () =>   instance.get(`auth/me`),\n    login(email, password, rememberMe=false) {\n        return instance.post('auth/login', {email, password, rememberMe})\n    },\n    logout() {\n        return instance.delete('auth/login')\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","module.exports = __webpack_public_path__ + \"static/media/user.4802d74b.jpg\";","import {ADD_POST, UPDATE_NEW_POST_TEXT} from \"./profile-reducer\";\n\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\n\nlet initialState = {\n    dialogsData: [\n        {id: 1, name: 'Dron', picture: 'http://avatars.co.ua/web/wallpapers/avatarka-92776/thumbnail/lg.gif'},\n        {id: 2, name: 'Petr', picture: 'http://avatars.co.ua/web/wallpapers/avatarka-92898/thumbnail/lg.jpg'},\n        {\n            id: 3,\n            name: 'Nikolaich',\n            picture: 'http://avatars.co.ua/web/wallpapers/avatarka-zhivotnye-49766/thumbnail/lg.jpg'\n        },\n        {\n            id: 4,\n            name: 'Vasiliy',\n            picture: 'http://avatars.co.ua/web/wallpapers/avatarki-angely-9923/thumbnail/lg.gif'\n        },\n        {\n            id: 5,\n            name: 'Ibragim',\n            picture: 'http://avatars.co.ua/web/wallpapers/3d-avatarka-99759/thumbnail/lg.gif'\n        },\n        {\n            id: 6,\n            name: 'Michail',\n            picture: 'http://avatars.co.ua/web/wallpapers/avatarki-animaciya-38172/thumbnail/lg.gif'\n        }],\n    messagesData: [\n        {id: 1, message: 'Hello! How are you doing?'},\n        {id: 2, message: 'Whats soup dock?'},\n        {id: 3, message: 'Where are you from?'},\n        {id: 4, message: 'Life is piece of shirt!!!'},\n        {id: 5, message: 'Remember me?'},\n        {id: 6, message: 'Just do it!!!'}]\n};\n\nexport const dialogsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SEND_MESSAGE : {\n            let body = action.newMessageBody\n            return {\n                ...state,\n                messagesData: [...state.messagesData, {\n                    id: state.messagesData[state.messagesData.length - 1].id + 1,\n                    message: body\n                }]\n            }\n        }\n        default:\n            return state;\n    }\n    return state;\n}\n\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"size\":\"News_size__mfLcr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1_En6\",\"selectedPage\":\"users_selectedPage__1mnwI\",\"pageCounter\":\"users_pageCounter__22AAw\"};","module.exports = __webpack_public_path__ + \"static/media/Pacman-1s-200px.2096574f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\"};","import React from 'react'\nimport styles from './FormsContols.module.css'\nimport {required} from \"../../../utils/validators/validators\";\nimport {Field} from \"redux-form\";\n\n\nexport const FormControl = ({input, meta,child, ...props}) => {\n    const hasError = meta.touched&&meta.error\n    return(\n        <div className={styles.formControl+' '+ (hasError ? styles.error : '')}>\n            <div>\n                {props.children}\n            </div>\n            {hasError&&<span>{meta.error}</span>}\n        </div>\n    )\n};\nexport const Textarea = (props) => {\n    let {input, meta, child, ...restProps} = props\n    return <FormControl {...props}> <textarea {...input} {...restProps}/></FormControl>\n};\nexport const Input = (props) => {\n const {input, meta, child, ...restProps} = props\n    return <FormControl {...props}> <input {...input} {...restProps}/></FormControl>\n\n};\n\nexport const createField = (placeholder, name, validators, component, props={}, text=\"\") => {\n    return (\n        <div>\n            <Field placeholder={placeholder}\n                   component={component}\n                   name={name}\n                   validate={validators}\n                   {...props}\n            /> {text}\n        </div>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport s from './Navbar.module.css';\nimport {isClassExpression} from '@babel/types';\nimport {NavLink} from \"react-router-dom\";\n\nconst Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={`${s.item} ${s.active}`}>\n                <NavLink to='/profile' activeClassName={s.activeLink}> Profile</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\n            </div>\n            <div className={s.item}>\n                <a>Music</a>\n            </div>\n            <div className={s.item}>\n                <a>Settings</a>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>            </div>\n        </nav>\n    );\n};\nexport default Navbar;","import React from 'react'\nimport s from './News.module.css'\n\nconst News = (props) => {\n    return (\n        <div className={s.size}>\n            САМЫЕ ПОСЛЕДНИЕ НОВОСТИ НЕДЕЛИ!!!\n        </div>\n    )\n}\nexport default News;","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nexport const FOLLOW = 'FOLLOW';\nexport const UNFOLLOW = 'UNFOLLOW';\nexport const SET_USERS = 'SET_USERS';\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nexport const SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\nexport const TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\n\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [1, 2, 3, 4],\n}\nexport const usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USERS: {\n            return {\n                ...state,\n                users: [...action.users]\n            }\n        }\n        case SET_CURRENT_PAGE: {\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        }\n        case SET_TOTAL_COUNT: {\n            return {\n                ...state,\n                totalUsersCount: action.totalCount\n            }\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching ?\n                    [...state.followingInProgress, action.userId] :\n                    state.followingInProgress.filter(id => id !== action.userId)\n            }\n        }\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\n                // users: state.users.map((u) => {\n                //     if (u.id === action.userId) {\n                //         return {...u, followed: true}\n                //     }\n                //     return u\n                // })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\n\n                // users: state.users.map((u) => {\n                //     if (u.id === action.userId) {\n                //         return {...u, followed: false}\n                //     }\n                //     return u\n                // })\n            }\n        default:\n            return state;\n    }\n    return state;\n}\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setUsersTotalCount = (totalCount) => ({type: SET_TOTAL_COUNT, totalCount})\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\n\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n});\n\nconst followUnfollowFlow = async(dispatch, userId, apiMethod, actionCreator)=>{\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if (response.data.resultCode === 0) {\n        dispatch(actionCreator(userId))\n    }\n    dispatch(toggleFollowingProgress(false, userId))\n\n}\n\nexport const unfollow = (userId) => {\n    return async(dispatch) => {\n        await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\n\n    }\n};\nexport const follow = ( userId) => {\n    return async(dispatch) => {\n        await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\n\n    }\n};\n    export const getUsers = (page, pageSize) => {\n        return  async(dispatch) => {\n            dispatch(toggleIsFetching(true));\n\n            dispatch(setCurrentPage(page));\n\n            let response = await usersAPI.getUsers(page, pageSize);\n\n            dispatch(toggleIsFetching(false));\n\n            dispatch(setUsers(response.items));\n\n            dispatch(setUsersTotalCount(response.totalCount));\n        }\n    }\n\n\n\n","import React, {useState} from 'react';\nimport cn from \"classnames\";\nimport styles from \"./Paginator.module.css\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n    let pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    };\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n    return (\n        <div className={styles.paginator}>\n            { portionNumber > 1 &&\n                <button\n                    onClick={() => {\n                        onPageChanged((portionNumber - 1)*portionSize);\n                        setPortionNumber(portionNumber - 1);\n                    }}\n                >\n                    PREV\n                </button>\n            }\n\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n                .map((p) => {\n                    return <span className={ cn({\n                                                    [styles.selectedPage]: currentPage === p\n                                                }, styles.pageNumber)\n                                            }\n                                 key={p}\n                                 onClick={(e) => {\n                                     onPageChanged(p);\n                                 }}\n                            >\n                                {p}\n                            </span>\n                })}\n             { portionCount > portionNumber &&\n            <button\n                onClick={() => {\n                    onPageChanged(portionNumber*portionSize+1);\n                    setPortionNumber(portionNumber + 1);\n                }}\n            >\n                NEXT\n            </button> }\n\n\n        </div>\n    )\n}\n\nexport default Paginator;","import React from 'react'\nimport styles from \"./users.module.css\";\nimport userPhoto from '../../assets/images/user.jpg'\nimport {NavLink} from \"react-router-dom\";\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n    return (\n        <div>\n                    <span>\n                        <div>\n                            <NavLink to={'/profile/' + user.id}>\n                            <img className={styles.userPhoto}\n                                 src={user.photos.small != null ? user.photos.small : userPhoto} alt=\"Аватарка\"/>\n                            </NavLink>\n\n                        </div>\n                        <div>\n                            {user.followed ?\n                                <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n                                    unfollow(user.id)\n                                }}>Unfollow</button>\n                                : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n                                    follow(user.id)\n\n                                }}>Follow</button>}\n\n                        </div>\n                    </span>\n            <span>\n                        <span>\n                            <div>{user.name}</div><div>{user.status}</div>\n                        </span>\n                        <span>\n                            <div>\n                                {'user.location.city'}\n                            </div>\n                            <div>\n                                {'user.location.country'}\n                            </div>\n                        </span>\n                    </span>\n        </div>\n    )\n}\nexport default User;","import React from 'react'\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\n\nlet Users = (props) => {\n    const {\n        followingInProgress,\n        unfollow,\n        follow,\n        currentPage,\n        onPageChanged,\n        totalUsersCount,\n        pageSize\n    } = props;\n    return (\n        <div>\n            <Paginator\n                currentPage = {currentPage}\n                onPageChanged = {onPageChanged}\n                totalItemsCount={totalUsersCount}\n                pageSize = {pageSize}\n            />\n            {\n                props.users.map((u, key) => {\n                    return (\n                        <User\n                            key={key}\n                            user={u}\n                            followingInProgress={followingInProgress}\n                            unfollow={unfollow}\n                            follow={follow}\n                        />\n                    )\n                })\n            }\n        </div>\n    )\n}\nexport default Users","import {createSelector} from \"reselect\";\n\nexport const getUsersSimple = (state) => {\n    return state.usersPage.users;\n};\n\n\nexport const getUsersSuperSelector = createSelector( getUsersSimple,\n    (users) => {\n        return users.filter(u => true);\n    }\n);\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n};\n\nexport const getTotalUserCount = (state) => {\n    return state.usersPage.totalUsersCount;\n};\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n};\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n};\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n};\n\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    getUsers,\n    setCurrentPage,\n    toggleFollowingProgress, follow, unfollow\n} from \"../../redux/users-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUserCount, getUsersSelector, getUsersSimple, getUsersSuperSelector\n} from \"../../redux/users-selectors\";\n\nclass UsersAPIComponent extends React.Component {\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.getUsers(pageNumber, this.props.pageSize)\n        this.props.setCurrentPage(pageNumber)\n\n    }\n\n    render() {\n        return (\n            <>\n                {this.props.isFetching && <Preloader/>}\n                <Users totalUsersCount={this.props.totalUsersCount}\n                       pageSize={this.props.pageSize}\n                       currentPage={this.props.currentPage}\n                       onPageChanged={this.onPageChanged}\n                       users={this.props.users}\n                       follow={this.props.follow}\n                       unfollow={this.props.unfollow}\n                        followingInProgress = {this.props.followingInProgress}\n                />\n            </>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsersSimple(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUserCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\nexport default compose(\n    connect(mapStateToProps, {\n        follow,\n        unfollow,\n        setCurrentPage,\n        toggleFollowingProgress,\n        getUsers\n    })\n)(UsersAPIComponent)\n","import React from 'react';\nimport s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\nconst Header = (props) => {\n    return (\n        <header className={s.header} >\n            <img src='https://png.pngtree.com/element_pic/00/16/07/115783931601b5c.jpg' alt={\"Logo\"}></img>\n            <div className={s.loginBlock}>\n                {props.isAuth\n                    ? <div>\n                        {props.login} - <button onClick={props.logout}>Logout</button>\n                    </div>\n                    : <NavLink to='/login'>Login</NavLink>\n                }\n            </div>\n        </header>\n    );\n};\nexport default Header;","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nexport const SET_USER_DATA = 'SET_USER_DATA';\nexport const UNFOLLOW = 'UNFOLLOW';\n\n let initialState = {\n     userId:null,\n     email:null,\n     login:null,\n     isAuth:false\n }\nexport const authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:{\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n        default:\n            return state;\n    }\n    return state;\n}\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA, payload:{userId, email, login, isAuth}\n})\nexport const getAuthUserData = () => async(dispatch)=>{\n    let response = await authAPI.me();\n            if (!response.data.resultCode) {\n                let {id, login, email} = response.data.data\n                dispatch(setAuthUserData(id, email, login, true))\n            }\n}\nexport const login = (email, password, rememberMe) => async(dispatch)=>{\n    let response = await authAPI.login(email, password, rememberMe);\n    if (!response.data.resultCode) {\n        dispatch(getAuthUserData());\n    } else {\n        const message = response.data.messages.length > 0\n            ? response.data.messages[0] : \"Some Error!!!\"\n        dispatch(stopSubmit(\"login\", {_error: message}));\n    }\n};\nexport const logout = () => (dispatch)=>{\n    authAPI.logout()\n        .then(response => {\n            if (!response.data.resultCode) {\n                dispatch(setAuthUserData(null, null, null, false))\n            }\n        });\n}\n\n\n","import React from 'react';\nimport Header from \"./Header\";\nimport * as axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {getAuthUserData, logout} from \"../../redux/auth-reducer\";\nimport {authAPI} from \"../../api/api\";\n\nclass HeaderContainer extends React.Component {\n\n    render() {\n        return <Header {...this.props}/>\n    };\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth:state.auth.isAuth,\n    login:state.auth.login\n})\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react'\nimport createReduxForm from \"redux-form/lib/createReduxForm\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../components/common/FormControls/FormsControls\";\nimport {required} from \"../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"./../components/common/FormControls/FormsContols.module.css\"\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n                {createField(\"Email\", \"email\", [required], Input)}\n\n                {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n\n                {createField(null, \"rememberMe\", null, Input, {type: \"checkbox\"}, \"Remember me\")}\n            {error &&\n                <div className={style.formSummaryError}>\n               {error}\n            </div>}\n            <div>\n                <button>Login</button>\n            </div>\n\n        </form>\n    )\n}\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\nconst Login = (props) => {\n\n   const onSubmit =(formData)=>{\n       const {\n           email,\n           password,\n           rememberMe\n       } = formData;\n\n       const {login} = props\n\n       login(email, password, rememberMe)\n    }\n    if (props.isAuth) {\n        return (\n            <Redirect to={\"/profile\"}/>\n        )\n    }else {\n        return <div>\n            <h1>LOGIN</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n\n    }\n}\nexport default connect(state => ({isAuth: state.auth.isAuth}), {login})(Login)","import {getAuthUserData} from \"./auth-reducer\";\n\nexport const SET_INITIALIZED = 'SET_INITIALIZED';\n\n let initialState = {\n     initialized:false\n }\nexport const appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_INITIALIZED:{\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n        default:\n            return state;\n    }\n    return state;\n}\nexport const initializedSuccess = () => ({\n    type: SET_INITIALIZED\n})\nexport const initializeApp = () => async(dispatch)=>{\n    await dispatch(getAuthUserData());\n    await dispatch(initializedSuccess());\n}\n","let initialState = {};\nexport const sidebarReducer = (state= initialState, action) => {\nreturn state;\n}","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport {profileReducer} from \"./profile-reducer\";\nimport {dialogsReducer} from \"./dialogs-reducer\";\nimport {sidebarReducer} from \"./sidebar-reducer\";\nimport {usersReducer} from \"./users-reducer\";\nimport {authReducer} from \"./auth-reducer\";\nimport  thunkMiddleware from \"redux-thunk\"\nimport {reducer as formReducer} from \"redux-form\"\nimport {appReducer} from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    messagePage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    init: appReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nstore.subscribe(() => console.log(store.getState()))\nwindow.store = store;\nexport default store;","import React from 'react';\nimport Preloader from \"../components/common/Preloader/Preloader\";\n\nlet mapStateToPropsRedirect = (state) => {\n    return {\n        isAuth : state.auth.isAuth\n    };\n}\n\nexport const withSuspense = (Component)=> {\n    return (props)=>{\n        return(\n            <React.Suspense fallback={<Preloader/>}>\n                <Component {...props}/>\n            </React.Suspense>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {BrowserRouter, HashRouter, Route} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./login/login\";\nimport {connect, Provider} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized){\n            return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                {/* <Profile/> */}\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs' render={\n                            withSuspense(DialogsContainer)\n                        }\n                    />\n                    <Route path='/profile/:userId?' render={\n                        withSuspense(ProfileContainer)\n                       }\n                    />\n                    <Route path='/news' component={News}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    initialized: state.init.initialized\n})\n\nlet AppContainer =  compose (\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n    return (\n        <HashRouter >\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </HashRouter>\n\n    )\n};\n\nexport default SamuraiJSApp;","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\nimport React from 'react';\nimport SamuraiJSApp from \"./App\";\n\n// let rerenderEntireTree = () => {\n    ReactDOM.render(\n<SamuraiJSApp/>, document.getElementById('root'));\n// }\n// rerenderEntireTree();\n// store.subscribe(rerenderEntireTree);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import preloader from './../../../assets/images/Pacman-1s-200px.svg'\nimport React from 'react'\nlet Preloader = (props) => {\n    return (<div>\n        <img alt='Preloader' src={preloader}/>\n    </div>)\n}\n\nexport default Preloader;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(u => {\n        if (u[objPropName] === itemId) {\n            return {...u, ...newObjProps};\n        }\n        return u;\n    })\n}\n\nexport const parseStr = (str) => {\n    let flag = false;\n    let result = \"\";\n\n    for (let i = 0; i < str.length; i++) {\n        if (str[i]===\">\") {\n            flag=true;\n            continue;\n        }\n\n        if (flag && str[i]!=\")\") result+=str[i];\n    }\n\n    return result.toLowerCase();\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsContols_formControl__2CaaX\",\"error\":\"FormsContols_error__27SUd\",\"formSummaryError\":\"FormsContols_formSummaryError__1F1yP\"};","export const required = value =>  value ? undefined : 'Field is required...'\n\nexport const maxLengthCreator= maxLength  => value =>\nvalue&&value.length <= maxLength ? undefined : 'Max length 30 symbols...'\n\nexport const minLengthCreator = minLength => value =>\n    value&&value.length >= minLength ? undefined : 'Min length 10 symbols...'\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__18P4_\",\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"selectedPage\":\"Paginator_selectedPage__3SIki\"};","import {profileAPI, usersAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {parseStr} from \"../utils/object-helpers\";\n\nexport const ADD_POST = 'ADD-POST';\nexport const DELETE_POST = 'DELETE_POST';\nexport const SET_USER_PROFILE = 'SET-USER-PROFILE';\nexport const SET_STATUS = 'SET-STATUS';\nexport const SAVE_PHOTO_SUCCESS = \"SAVE-PHOTO-SUCCESS\";\n\nlet initialState = {\n    postData: [\n        {\n            id: 1,\n            message: 'How are you?',\n            likesCounter: 5,\n            picture: 'https://klike.net/uploads/posts/2019-06/1560059165_1.jpg'\n        },\n        {\n            id: 2,\n            message: 'It is my life.',\n            likesCounter: 12,\n            picture: 'https://klike.net/uploads/posts/2019-06/medium/1560059237_3.jpg'\n        },\n        {\n            id: 3,\n            message: 'Very cool!!!',\n            likesCounter: 23,\n            picture: 'https://klike.net/uploads/posts/2019-06/1560059217_6.jpg'\n        },\n        {\n            id: 4,\n            message: 'In god we trust!!!',\n            likesCounter: 35,\n            picture: 'https://klike.net/uploads/posts/2019-06/1560059165_1.jpg'\n        }],\n    profile: null,\n    status: ''\n};\n\n\nexport const profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case ADD_POST : {\n            return {\n                ...state,\n                postData: [...state.postData, {\n                    id: state.postData[state.postData.length - 1].id + 1,\n                    message: action.newPostText,\n                    likesCounter: 0,\n                    picture: 'https://klike.net/uploads/posts/2019-06/1560059165_1.jpg'\n                }]\n            }\n        }\n        case DELETE_POST : {\n            return {\n                ...state,\n                postData: state.postData.filter(p => p.id != action.postId)\n            }\n        }\n        case SET_USER_PROFILE : {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case SET_STATUS : {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case SAVE_PHOTO_SUCCESS:{\n            return {...state, profile: {...state.profile, photos: action.photos} }\n        }\n        default:\n            return state;\n    }\n    return state;\n}\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\n\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\n\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\n\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\n\nexport const setStatus = (status) => ({type: SET_STATUS, status});\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response.data));\n}\n\nexport const getStatus = (userId) => async dispatch => {\n    let response = await profileAPI.getStatus(userId)\n    dispatch(setStatus(response.data))\n}\n\nexport const updateStatus = (status) => async dispatch => {\n    let response = await profileAPI.updateStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n}\n\nexport const savePhoto = (file) => async (dispatch) => {\n    let response = await profileAPI.savePhoto(file);\n\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos));\n    }\n}\n\nexport const saveProfile = (profile) => async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n    const response = await profileAPI.saveProfile(profile);\n\n    if (response.data.resultCode === 0) {\n        dispatch(getUserProfile(userId));\n    }\n    else {\n        const errorField = parseStr(response.data.messages[0]);\n        dispatch(stopSubmit(\"edit-profile\", {\"contacts\": {[errorField]: response.data.messages[0]} }));\n        return Promise.reject(response.data.messages[0]);\n    }\n}\n\n"],"sourceRoot":""}